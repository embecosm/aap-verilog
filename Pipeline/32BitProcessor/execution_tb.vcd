$date
	Tue Aug 11 14:11:08 2015
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$scope module fetch_test $end
$var wire 1 ! clock $end
$var wire 32 " fetchoutput [31:0] $end
$var wire 1 # flush $end
$var wire 20 $ instruction_rd1 [19:0] $end
$var wire 16 % instruction_rd1_out [15:0] $end
$var wire 9 & pcchange [8:0] $end
$var wire 3 ' pcjumpenable [2:0] $end
$var wire 6 ( pclocation [5:0] $end
$var wire 1 ) reset $end
$var wire 1 * stop $end
$var reg 16 + fetch1 [15:0] $end
$var reg 16 , fetch2 [15:0] $end
$var reg 20 - previous_programcounter [19:0] $end
$var reg 20 . programcounter [19:0] $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module decoder_test $end
$var wire 1 / bit_check $end
$var wire 32 0 fetchoutput [31:0] $end
$var wire 1 # flush $end
$var reg 6 1 destination [5:0] $end
$var reg 6 2 opcode [5:0] $end
$var reg 6 3 operationnumber [5:0] $end
$var reg 22 4 signed_1 [21:0] $end
$var reg 16 5 signed_2 [15:0] $end
$var reg 10 6 signed_3 [9:0] $end
$var reg 6 7 source_1 [5:0] $end
$var reg 6 8 source_2 [5:0] $end
$var reg 1 9 super_duper_a $end
$var reg 1 : super_duper_b $end
$var reg 6 ; unsigned_1 [5:0] $end
$var reg 16 < unsigned_2 [15:0] $end
$var reg 9 = unsigned_3 [8:0] $end
$var reg 10 > unsigned_4 [9:0] $end
$var reg 9 ? unsigned_5 [8:0] $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module execution_test $end
$var wire 1 @ carrybit $end
$var wire 1 ! clock $end
$var wire 32 A data_rd1_out [31:0] $end
$var wire 32 B data_rd2_out [31:0] $end
$var wire 32 C data_rd3_out [31:0] $end
$var wire 32 D data_rd4_out [31:0] $end
$var wire 6 E destination [5:0] $end
$var wire 6 F operationnumber [5:0] $end
$var wire 20 G previous_programcounter [19:0] $end
$var wire 16 H reg_rd1_out [15:0] $end
$var wire 16 I reg_rd2_out [15:0] $end
$var wire 16 J reg_rd3_out [15:0] $end
$var wire 1 ) reset $end
$var wire 22 K signed_1 [21:0] $end
$var wire 16 L signed_2 [15:0] $end
$var wire 10 M signed_3 [9:0] $end
$var wire 6 N source_1 [5:0] $end
$var wire 6 O source_2 [5:0] $end
$var wire 1 P super_duper_a $end
$var wire 1 Q super_duper_b $end
$var wire 6 R unsigned_1 [5:0] $end
$var wire 16 S unsigned_2 [15:0] $end
$var wire 9 T unsigned_3 [8:0] $end
$var wire 10 U unsigned_4 [9:0] $end
$var wire 9 V unsigned_5 [8:0] $end
$var reg 1 W carrybit_wr $end
$var reg 1 X carrybit_wr_enable $end
$var reg 17 Y carryreg [16:0] $end
$var reg 9 Z data_rd1 [8:0] $end
$var reg 9 [ data_rd2 [8:0] $end
$var reg 9 \ data_rd3 [8:0] $end
$var reg 9 ] data_rd4 [8:0] $end
$var reg 9 ^ data_wr1 [8:0] $end
$var reg 32 _ data_wr1_data [31:0] $end
$var reg 1 ` data_wr1_enable $end
$var reg 9 a data_wr2 [8:0] $end
$var reg 32 b data_wr2_data [31:0] $end
$var reg 1 c data_wr2_enable $end
$var reg 9 d data_wr3 [8:0] $end
$var reg 32 e data_wr3_data [31:0] $end
$var reg 1 f data_wr3_enable $end
$var reg 9 g data_wr4 [8:0] $end
$var reg 32 h data_wr4_data [31:0] $end
$var reg 1 i data_wr4_enable $end
$var reg 9 j pcchange [8:0] $end
$var reg 3 k pcjumpenable [2:0] $end
$var reg 6 l pclocation [5:0] $end
$var reg 6 m reg_rd1 [5:0] $end
$var reg 6 n reg_rd2 [5:0] $end
$var reg 6 o reg_rd3 [5:0] $end
$var reg 6 p reg_wr1 [5:0] $end
$var reg 16 q reg_wr1_data [15:0] $end
$var reg 1 r reg_wr1_enable $end
$var reg 6 s reg_wr2 [5:0] $end
$var reg 16 t reg_wr2_data [15:0] $end
$var reg 1 u reg_wr2_enable $end
$var reg 1 v stop $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module registerfile_tb $end
$var wire 1 w carrybit_wr $end
$var wire 1 x carrybit_wr_enable $end
$var wire 1 ! clock $end
$var wire 6 y reg_rd1 [5:0] $end
$var wire 16 z reg_rd1_out [15:0] $end
$var wire 6 { reg_rd2 [5:0] $end
$var wire 16 | reg_rd2_out [15:0] $end
$var wire 6 } reg_rd3 [5:0] $end
$var wire 16 ~ reg_rd3_out [15:0] $end
$var wire 6 !" reg_wr1 [5:0] $end
$var wire 16 "" reg_wr1_data [15:0] $end
$var wire 1 #" reg_wr1_enable $end
$var wire 6 $" reg_wr2 [5:0] $end
$var wire 16 %" reg_wr2_data [15:0] $end
$var wire 1 &" reg_wr2_enable $end
$var wire 1 ) reset $end
$var reg 1 '" carrybit $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module TheInstructionMemory_test $end
$var wire 1 ! clock $end
$var wire 20 (" instruction_rd1 [19:0] $end
$var wire 16 )" instruction_rd1_out [15:0] $end
$var wire 20 *" instruction_rd2 [19:0] $end
$var wire 16 +" instruction_rd2_out [15:0] $end
$var wire 20 ," instruction_rd3 [19:0] $end
$var wire 16 -" instruction_rd3_out [15:0] $end
$var wire 20 ." instruction_rd4 [19:0] $end
$var wire 16 /" instruction_rd4_out [15:0] $end
$var wire 20 0" instruction_wr1 [19:0] $end
$var wire 16 1" instruction_wr1_data [15:0] $end
$var wire 1 2" instruction_wr1_enable $end
$var wire 20 3" instruction_wr2 [19:0] $end
$var wire 16 4" instruction_wr2_data [15:0] $end
$var wire 1 5" instruction_wr2_enable $end
$var wire 20 6" instruction_wr3 [19:0] $end
$var wire 16 7" instruction_wr3_data [15:0] $end
$var wire 1 8" instruction_wr3_enable $end
$var wire 20 9" instruction_wr4 [19:0] $end
$var wire 16 :" instruction_wr4_data [15:0] $end
$var wire 1 ;" instruction_wr4_enable $end
$var wire 1 ) reset $end
$upscope $end
$upscope $end
$scope module testbench $end
$scope module TheDataMemory_test $end
$var wire 1 ! clock $end
$var wire 9 <" data_rd1 [8:0] $end
$var wire 32 =" data_rd1_out [31:0] $end
$var wire 9 >" data_rd2 [8:0] $end
$var wire 32 ?" data_rd2_out [31:0] $end
$var wire 9 @" data_rd3 [8:0] $end
$var wire 32 A" data_rd3_out [31:0] $end
$var wire 9 B" data_rd4 [8:0] $end
$var wire 32 C" data_rd4_out [31:0] $end
$var wire 9 D" data_wr1 [8:0] $end
$var wire 32 E" data_wr1_data [31:0] $end
$var wire 1 F" data_wr1_enable $end
$var wire 9 G" data_wr2 [8:0] $end
$var wire 32 H" data_wr2_data [31:0] $end
$var wire 1 I" data_wr2_enable $end
$var wire 9 J" data_wr3 [8:0] $end
$var wire 32 K" data_wr3_data [31:0] $end
$var wire 1 L" data_wr3_enable $end
$var wire 9 M" data_wr4 [8:0] $end
$var wire 32 N" data_wr4_data [31:0] $end
$var wire 1 O" data_wr4_enable $end
$var wire 1 ) reset $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xO"
bx N"
bx M"
xL"
bx K"
bx J"
xI"
bx H"
bx G"
xF"
bx E"
bx D"
bx C"
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
z;"
bxz :"
bxz 9"
z8"
bxz 7"
bxz 6"
z5"
bxz 4"
bxz 3"
z2"
bxz 1"
bxz 0"
bx /"
bz ."
bx -"
bz ,"
bx +"
bz *"
bx )"
bx ("
x'"
x&"
bx %"
bx $"
x#"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
xx
xw
xv
xu
bx t
bx s
xr
bx q
bx p
bx o
bx n
bx m
bx l
bx k
bx j
xi
bx h
bx g
xf
bx e
bx d
xc
bx b
bx a
x`
bx _
bx ^
bx ]
bx \
bx [
bx Z
bx Y
xX
xW
bx V
bx U
bx T
bx S
bx R
xQ
xP
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
x@
bx ?
bx >
bx =
bx <
bx ;
x:
x9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
x/
bx .
bx -
bx ,
bx +
x*
x)
bx (
bx '
bx &
bx %
bx $
x#
bx "
0!
$end
#1
bx ,
0X
0x
b0 k
b0 '
0i
0O"
0f
0L"
0c
0I"
0`
0F"
0u
0&"
0r
0#"
1!
#2
0'"
0@
0!
1)
#3
b0 .
b100000000 %
b100000000 )"
b0 $
b0 ("
1!
#4
0!
0)
#5
b1 -
b1 G
b1 ,
bx0000000000000001 "
bx0000000000000001 0
b1 .
b1 $
b1 ("
1!
#6
0!
#7
0:
0Q
09
0P
b0 3
b0 F
b1 6
b1 M
b1 5
b1 L
b1 4
b1 K
b1 =
b1 T
b1 <
b1 S
b1 ;
b1 R
b1 8
b1 O
b0 7
b0 N
b0 1
b0 E
b0 2
0/
0#
b10 -
b10 G
b1 ,
b1 +
b10000000000000001 "
b10000000000000001 0
b10 .
b10 $
b10 ("
1!
#8
0!
#9
b11 -
b11 G
b1 ,
b11 .
b11 $
b11 ("
b0 o
b0 J
b0 ~
b0 }
b1 n
b0 I
b0 |
b1 {
b0 m
b0 H
b0 z
b0 y
1!
#10
0!
#11
b100 -
b100 G
b1 ,
b100 .
b100 $
b100 ("
1!
#12
0!
#13
b101 -
b101 G
b1 ,
b101 .
b101 $
b101 ("
1!
#14
0!
#15
b110 -
b110 G
b1 ,
b110 .
b110 $
b110 ("
1!
#16
0!
#17
b111 -
b111 G
b1 ,
b111 .
b111 $
b111 ("
1!
#18
0!
#19
b1000 -
b1000 G
b1111000100000 ,
b10001111000100000 "
b10001111000100000 0
b1000 .
b10000000011110 %
b10000000011110 )"
b1000 $
b1000 ("
1!
#20
0!
#21
b1111 3
b1111 F
b100000 6
b100000 M
b100000 5
b100000 L
b100000 4
b100000 K
b100000 =
b100000 T
b100000 <
b100000 S
b0 ;
b0 R
b0 8
b0 O
b100 7
b100 N
b1111 2
b1001 -
b1001 G
b1111001010000 ,
b1111000100000 +
b11110001000000001111001010000 "
b11110001000000001111001010000 0
b1001 .
b101000000011110 %
b101000000011110 )"
b1001 $
b1001 ("
1!
#22
0!
#23
b1010000 6
b1010000 M
b1010000 5
b1010000 L
b1010000 4
b1010000 K
b1010000 =
b1010000 T
b10000 <
b10000 S
b10 7
b10 N
b1 1
b1 E
b100000 I
b100000 |
b100000 J
b100000 ~
1r
1#"
b100000 q
b100000 ""
b0 p
b0 !"
b0 n
b0 {
b100 m
b100 y
b1010 -
b1010 G
b1010000001 ,
b1111001010000 +
b11110010100000000001010000001 "
b11110010100000000001010000001 0
b1010 .
b1000000100000010 %
b1000000100000010 )"
b1010 $
b1010 ("
1!
#24
0!
#25
b1 3
b1 F
b10000001 6
b10000001 M
b10000001 5
b10000001 L
b10000001 4
b10000001 K
b10000001 =
b10000001 T
b1 <
b1 S
b1 ;
b1 R
b1 8
b1 O
b0 7
b0 N
b10 1
b10 E
b1 2
b1011 -
b1011 G
b1000001011000001 ,
b1010000001 +
b10100000011000001011000001 "
b10100000011000001011000001 0
b1011 .
b1100000110000010 %
b1100000110000010 )"
b1011 $
b1011 ("
b10000 q
b10000 ""
b1 p
b1 !"
b1 o
b10000 J
b10000 ~
b1 }
b10 m
b10 y
1r
1#"
1!
#26
0!
#27
1:
1Q
19
1P
b1000011 6
b1000011 M
b1000001011 5
b1000001011 L
b1000000000011000001 4
b1000000000011000001 K
b10001 ?
b10001 V
b1001 >
b1001 U
b1000001 S
b1000001 <
b1 ;
b1 8
b0 7
b11 1
b11 E
1/
1#
b110000 q
b110000 ""
b10 p
b10 !"
b10 o
b110000 J
b110000 ~
b10 }
b1 n
b10000 I
b10000 |
b1 {
b0 m
b100000 H
b100000 z
b0 y
1r
1#"
b1100 -
b1100 G
b1000000000 ,
b1000001011000001 +
b10000010110000010000001000000000 "
b10000010110000010000001000000000 0
b1100 .
b10 %
b10 )"
b1100 $
b1100 ("
1!
#28
0!
#29
0:
0Q
09
0P
b0 3
b0 F
b1 6
b1 M
b1 5
b1 L
b1 4
b1 K
b1 =
b1 T
b1 <
b1 S
b0 1
b0 E
b0 2
0/
0#
b1101 -
b1101 G
b0 ,
b1 +
b10000000000000000 "
b10000000000000000 0
b1101 .
b0 %
b0 )"
b1101 $
b1101 ("
1X
1x
0W
0w
b110000 Y
b11 p
b11 !"
b11 o
b110000 J
b110000 ~
b11 }
1r
1#"
1!
#30
0!
#31
b0 6
b0 M
b0 5
b0 L
b0 4
b0 K
b0 =
b0 T
b0 <
b0 S
b0 ;
b0 R
b0 8
b0 O
0X
0x
b0 o
b100000 J
b100000 ~
b0 }
0r
0#"
b1110 -
b1110 G
b1 ,
b0 +
b1 "
b1 0
b1110 .
b100000000 %
b100000000 )"
b1110 $
b1110 ("
1!
#32
0!
#33
1v
1*
b0 n
b100000 I
b100000 |
b0 {
1!
#34
0!
#35
1!
#36
0!
#37
1!
#38
0!
#39
1!
#40
0!
#41
1!
#42
0!
#43
1!
#44
0!
#45
1!
#46
0!
#47
1!
#48
0!
#49
1!
#50
0!
#51
1!
#52
0!
#53
1!
#54
0!
#55
1!
#56
0!
#57
1!
#58
0!
#59
1!
#60
0!
#61
1!
#62
0!
#63
1!
#64
0!
#65
1!
#66
0!
#67
1!
#68
0!
#69
1!
#70
0!
#71
1!
#72
0!
#73
1!
#74
0!
#75
1!
#76
0!
#77
1!
#78
0!
#79
1!
#80
0!
#81
1!
#82
0!
#83
1!
#84
0!
#85
1!
#86
0!
#87
1!
#88
0!
#89
1!
#90
0!
#91
1!
#92
0!
#93
1!
#94
0!
#95
1!
#96
0!
#97
1!
#98
0!
#99
1!
#100
0!
#101
1!
#102
0!
#103
1!
#104
0!
#105
1!
#106
0!
#107
1!
#108
0!
#109
1!
#110
0!
#111
1!
#112
0!
#113
1!
#114
0!
#115
1!
#116
0!
#117
1!
#118
0!
#119
1!
#120
0!
#121
1!
#122
0!
#123
1!
#124
0!
#125
1!
#126
0!
#127
1!
#128
0!
#129
1!
#130
0!
#131
1!
#132
0!
#133
1!
#134
0!
#135
1!
#136
0!
#137
1!
#138
0!
#139
1!
#140
0!
#141
1!
#142
0!
#143
1!
#144
0!
#145
1!
#146
0!
#147
1!
#148
0!
#149
1!
#150
0!
#151
1!
#152
0!
#153
1!
#154
0!
#155
1!
#156
0!
#157
1!
#158
0!
#159
1!
#160
0!
#161
1!
#162
0!
#163
1!
#164
0!
#165
1!
#166
0!
#167
1!
#168
0!
#169
1!
#170
0!
#171
1!
#172
0!
#173
1!
#174
0!
#175
1!
#176
0!
#177
1!
#178
0!
#179
1!
#180
0!
#181
1!
#182
0!
#183
1!
#184
0!
#185
1!
#186
0!
#187
1!
#188
0!
#189
1!
#190
0!
#191
1!
#192
0!
#193
1!
#194
0!
#195
1!
#196
0!
#197
1!
#198
0!
#199
1!
#200
0!
#201
1!
#202
0!
#203
1!
#204
0!
#205
1!
#206
0!
#207
1!
#208
0!
#209
1!
#210
0!
#211
1!
#212
0!
#213
1!
#214
0!
#215
1!
#216
0!
#217
1!
#218
0!
#219
1!
#220
0!
#221
1!
#222
0!
#223
1!
#224
0!
#225
1!
#226
0!
#227
1!
#228
0!
#229
1!
#230
0!
#231
1!
#232
0!
#233
1!
#234
0!
#235
1!
#236
0!
#237
1!
#238
0!
#239
1!
#240
0!
#241
1!
#242
0!
#243
1!
#244
0!
#245
1!
#246
0!
#247
1!
#248
0!
#249
1!
#250
0!
#251
1!
#252
0!
#253
1!
#254
0!
#255
1!
#256
0!
#257
1!
#258
0!
#259
1!
#260
0!
#261
1!
#262
0!
#263
1!
#264
0!
#265
1!
#266
0!
#267
1!
#268
0!
#269
1!
#270
0!
#271
1!
#272
0!
#273
1!
#274
0!
#275
1!
#276
0!
#277
1!
#278
0!
#279
1!
#280
0!
#281
1!
#282
0!
#283
1!
#284
0!
#285
1!
#286
0!
#287
1!
#288
0!
#289
1!
#290
0!
#291
1!
#292
0!
#293
1!
#294
0!
#295
1!
#296
0!
#297
1!
#298
0!
#299
1!
#300
0!
#301
1!
#302
0!
#303
1!
#304
0!
#305
1!
#306
0!
#307
1!
#308
0!
#309
1!
#310
0!
#311
1!
#312
0!
#313
1!
#314
0!
#315
1!
#316
0!
#317
1!
#318
0!
#319
1!
#320
0!
#321
1!
#322
0!
#323
1!
#324
0!
#325
1!
#326
0!
#327
1!
#328
0!
#329
1!
#330
0!
#331
1!
#332
0!
#333
1!
#334
0!
#335
1!
#336
0!
#337
1!
#338
0!
#339
1!
#340
0!
#341
1!
#342
0!
#343
1!
#344
0!
#345
1!
#346
0!
#347
1!
#348
0!
#349
1!
#350
0!
#351
1!
#352
0!
#353
1!
#354
0!
#355
1!
#356
0!
#357
1!
#358
0!
#359
1!
#360
0!
#361
1!
#362
0!
#363
1!
#364
0!
#365
1!
#366
0!
#367
1!
#368
0!
#369
1!
#370
0!
#371
1!
#372
0!
#373
1!
#374
0!
#375
1!
#376
0!
#377
1!
#378
0!
#379
1!
#380
0!
#381
1!
#382
0!
#383
1!
#384
0!
#385
1!
#386
0!
#387
1!
#388
0!
#389
1!
#390
0!
#391
1!
#392
0!
#393
1!
#394
0!
#395
1!
#396
0!
#397
1!
#398
0!
#399
1!
#400
0!
#401
1!
#402
0!
#403
1!
#404
0!
#405
1!
#406
0!
#407
1!
#408
0!
#409
1!
#410
0!
#411
1!
#412
0!
#413
1!
#414
0!
#415
1!
#416
0!
#417
1!
#418
0!
#419
1!
#420
0!
#421
1!
#422
0!
#423
1!
#424
0!
#425
1!
#426
0!
#427
1!
#428
0!
#429
1!
#430
0!
#431
1!
#432
0!
#433
1!
#434
0!
#435
1!
#436
0!
#437
1!
#438
0!
#439
1!
#440
0!
#441
1!
#442
0!
#443
1!
#444
0!
#445
1!
#446
0!
#447
1!
#448
0!
#449
1!
#450
0!
#451
1!
#452
0!
#453
1!
#454
0!
#455
1!
#456
0!
#457
1!
#458
0!
#459
1!
#460
0!
#461
1!
#462
0!
#463
1!
#464
0!
#465
1!
#466
0!
#467
1!
#468
0!
#469
1!
#470
0!
#471
1!
#472
0!
#473
1!
#474
0!
#475
1!
#476
0!
#477
1!
#478
0!
#479
1!
#480
0!
#481
1!
#482
0!
#483
1!
#484
0!
#485
1!
#486
0!
#487
1!
#488
0!
#489
1!
#490
0!
#491
1!
#492
0!
#493
1!
#494
0!
#495
1!
#496
0!
#497
1!
#498
0!
#499
1!
#500
0!
#501
1!
#502
0!
#503
1!
#504
0!
#505
1!
#506
0!
